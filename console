#!/usr/bin/php
<?php

/**
 * This is the main file of Spitfire, it is in charge of loading
 * system settings (for custom operation) and also of summoning
 * spitfire and loading the adequate controller for every single
 * request. It also makes sure that error logging is sent to
 * terminal / log file instead of to the user.
 * 
 * @package Spitfire
 * @author CÃ©sar de la Cal <cesar@magic3w.com>
 * @copyright 2018 Magic3W - All rights reserved
 */

use Monolog\Handler\StreamHandler;
use Psr\Log\LoggerInterface;
use spitfire\contracts\core\kernel\ConsoleKernelInterface;
use spitfire\contracts\core\kernel\KernelInterface;
use spitfire\contracts\core\LocationsInterface;
use spitfire\core\kernel\ConsoleKernel;
use spitfire\core\kernel\WebKernel;
use spitfire\core\Locations;
use Symfony\Component\Console\Application;
use Symfony\Component\Console\Input\ArgvInput;
use Symfony\Component\Console\Output\ConsoleOutput;

/* Include Spitfire core.
 */
define('BASEDIR', __DIR__);

include defined('VENDOR_DIR')? VENDOR_DIR . '/autoload.php' : __DIR__ . '/vendor/autoload.php';
include __DIR__ . '/bin/bootstrap.php';

spitfire()->provider()->set(Locations::class, new Locations(__DIR__));
spitfire()->provider()->set(LocationsInterface::class, new Locations(__DIR__));
spitfire()->provider()->set(ConsoleKernel::class, $kernel = new ConsoleKernel(new Application()));
spitfire()->provider()->set(ConsoleKernelInterface::class, $kernel);
spitfire()->provider()->set(KernelInterface::class, $kernel);
spitfire()->provider()->set(WebKernel::class, spitfire()->provider()->get(WebKernel::class));
spitfire()->provider()->set(LoggerInterface::class, new Monolog\Logger('log', [new StreamHandler(STDOUT)]));

/**
 * @var ConsoleKernel
 */
$kernel = spitfire()->provider()->get(ConsoleKernel::class);
exit(boot($kernel)->handle(new ArgvInput, new ConsoleOutput));
